---
subtitle: "Técnicas para 'Big Data' en Economía - Curso 2023/24 \n\n Universidad de Alicante"
# subtitle: "Análisis de Datos Multivariantes aplicado al Marketing - Curso 2023/24 \n\n Universidad de Alicante"
# subtitle: "Muestreo y Análisis de Datos - Universidad de Alicante"
# subtitle: "Econometría II - Curso 2023/24 \n\n Universidad de Alicante"
title    :  "Tema 0. Introducción a R. Ejercicio 1"
author:  
    - "Pedro Albarrán"
#    - "Teresa Molina"
# institute: "Dpto. de Fundamentos del Análisis Económico. Universidad de Alicante"
   
# institute: 
#     - "Dpto. de Fundamentos del Análisis Económico. Universidad de Alicante"
#     - "Dpto. de Fundamentos del Análisis Económico. Universidad de Alicante"
format:
#   beamer:
#     logo: figure/by-nc-sa2.png
#     titlegraphic: figure/by-nc-sa.png
#     theme: Boadilla # Copenhagen # CambridgeUS #
#     outertheme: miniframes
#     colortheme: crane
#     section-titles: false
#     fontsize: 10pt
# #    header-includes:
# #      - \setbeameroption{show notes}
# #      # - \setbeameroption{show notes on second screen}
  # revealjs:
  #   logo: figure/by-nc-sa2.png
  #   titlegraphic: figure/by-nc-sa.png
  #   theme:  serif # simple # default # moon # beige # sky #
  #   smaller: false
  #   scrollable: true
  #   embed-resources: true
  #   slide-number: true
  #   show-slide-number: all
  #   transition: slide # concave # 
  #   background-transition: fade
  #   progress: true
  html: 
    embed-resources: true
execute:
  enabled: true      # (no) ejecutar code chunks
  eval: true        # por defecto, evalúa y muestra códido de code chunks
  #| echo: false
  warning: false    # pero no los mensajes ni warnings
  message: false
knitr:
  opts_chunk:
    results: hide     # ni muestra resultados ni figuras
    fig.show: hide
lang: es
strip-comments: true
toc: false
# css: styles.css
---


```{r setup}
#| include: false
library(kableExtra)
library(tidyverse)
library(rio)
library(knitr)
```


* En este ejercicio vamos a practicar los conceptos básicos de R. Debéis escribir un archivo de código de R con los comandos necesarios para responder a los siguientes ejercicios. Podéis encontrar una plantilla [aquí](https://raw.githubusercontent.com/albarran/BigDataEcon/main/docs/Tema00ej1_12345678.R)

```{r}
#| echo: false
################################################################################
# extract R code
# knitr::purl("Tema01_ejerc.Rmd", output = "Tema01_ejerc_sol1.R", documentation = 1)
################################################################################


############################################################
## Ejercicio Tema 01
## NOMBRE: (reemplaza esto con tu Nombre y Apellido(s))
## DNI:    (reemplaza esto con tu DNI, o similar)
############################################################
```


# Apartado 1

```{r datos1}
#| echo: false
###---------- Datos1 ----------------------------------------------------

# Ventas de la Tienda A de Lunes a Viernes
A <- c(140, 50, 20, 120, 240)

# Ventas de la Tienda B de Lunes a Viernes
B <- c(25, 50, 100, 350, 10)

# Vector de nombres de días
vector_dias <- c("Lunes", "Martes", "Miercoles", "Jueves", "Viernes")

# Crear un DataFrame
datos1 <- t(cbind(A, B)) |> as.data.frame()
colnames(datos1) <- vector_dias
datos1 <- rownames_to_column(datos1, var = "Tienda")

# export(datos1, "/home/albarran/Archivos/teaching/MAD/000/00datos/Ventas1.xlsx", overwrite = TRUE)
export(datos1, "Ventas1.xlsx", overwrite = TRUE)
```

El archivo [`Ventas1.xlsx`](https://raw.githubusercontent.com/albarran/00datos/main/Ventas1.xlsx) contiene las ventas de dos tiendas, A y B, de Lunes a Viernes. Calcular las ventas totales (sumando ambas tiendas) para cada día, las ventas totales de ambas tiendas en toda la semana y las ventas medias de la semana de la tienda A.

  NOTA: se recomienda crear un proyecto de RStudio y guardar el archivo `Ventas1.xlsx` en la carpeta.

```{r ej1}
#| echo: false
###---------- Apartado 1) ----------------------------------------------------

library(rio)
datos <- import("Ventas1.xlsx")

# Extraer ventas de cada tienda
# OJO: datos es un data.frame, no un vector...
Ventas_A <- datos[1, 2:6]
Ventas_B <- datos[2, 2:6]

# si no sabemos, el número de columnas
# una *buena* pregunta 
# *entendiendo* las respuestas: ncol(Ventas_A) o dim(Ventas_A)[2]

# otras formas: datos[datos %in% "A", 2:ncol(Ventas_A)]

# Ventas totales por día
# aun así, podemos hacer algunas operaciones
Ventas_totales_diarias <-  Ventas_A + Ventas_B

# En Excel, mismo pasos algorítmicos, misma lógica
# implementación propia

Ventas_totales_diarias

# Total de Ventas semanales en A y en B
total_semana_A <- sum(Ventas_A)
total_semana_B <- sum(Ventas_B)
# Total de ventas semanales
Ventas_totales_semana <- total_semana_A + total_semana_B
Ventas_totales_semana <- sum(Ventas_totales_diarias)

Ventas_totales_semana

# Ventas medias de la semana en A
# solo podemos calcular media convertido a vector con as.numeric() o as.numeric()
# chatGPT nos puede ayudar: si pregutamos bien y ENTENDEMOS conceptos de R (tipos de objetos)
Ventas_media_A <- mean(as.numeric(Ventas_A))

Ventas_media_A
```

# Apartado 2

```{r datos2}
#| echo: false

################################################################################

# Ventas de cada producto (Miles de euros)
Prod_X <- c(460.998, 314.4)
Prod_Y <- c(290.475, 247.900)
Prod_Z <- c(309.306, 165.8)

# vector de ventas
ventas <- c(Prod_X, Prod_Y, Prod_Z)
# Matriz de ventas
mVentas <- matrix(ventas, nrow = 3, byrow = TRUE) 

# Vectores de region y titulos, para nombres
region  <- c("Nacional", "Internacional")
nombres <- c("X", "Y", "Z")

# Aplicar nombres de region a columnas
colnames(mVentas) <- region
# y nombres de productos a filas
rownames(mVentas) <- nombres

mVentas <- as.data.frame(mVentas)
mVentas <- rownames_to_column(mVentas, var = "Producto")

# export(mVentas, "/home/albarran/Archivos/teaching/MAD/000/00datos/Ventas2a.xlsx", overwrite = TRUE)
export(mVentas, "Ventas2a.xlsx", overwrite = TRUE)

################################################################################

# Construir matriz_ventas2
ventas2 <- c(474.5, 552.5, 310.7, 338.7, 380.3, 468.5)
nombres2 <- c("R", "S", "T")
mVentas2 <- matrix(ventas2, nrow=3, byrow = TRUE) 
  #, dimnames = list(nombres2, region))

# Aplicar nombres de region a columnas
colnames(mVentas2) <- region
# Nombres de filas
rownames(mVentas2) <- nombres2

mVentas2 <- as.data.frame(mVentas2)
mVentas2 <- rownames_to_column(mVentas2, var = "Producto")

# export(mVentas2, "/home/albarran/Archivos/teaching/MAD/000/00datos/Ventas2b.xlsx", overwrite = TRUE)
export(mVentas2, "Ventas2b.xlsx", overwrite = TRUE)

```


a) Los archivos [`Ventas2a.xlsx`](https://raw.githubusercontent.com/albarran/00datos/main/Ventas2a.xlsx) y [`Ventas2b.xlsx`](https://raw.githubusercontent.com/albarran/00datos/main/Ventas2b.xlsx) contiene el valor de las ventas de tres productos cada uno, a nivel nacional y a nivel internacional (en millones de euros). Combinar ambos conjuntos de datos en uno solo con las información de todos los productos.


```{r ej.2b}
#| echo: false
###---------- Apartado 2.a) ----------------------------------------------------

datos2a <- import("Ventas2a.xlsx")
datos2b <- import("Ventas2b.xlsx")

# Combinar
datos2 <- rbind(datos2a, datos2b)

datos2
```


b) Añadir una columna con el valor total de las ventas (nacionales más internacionales) de cada producto.

```{r ej2.b}
#| echo: false
###---------- Apartado 2.b) ----------------------------------------------------

# Calcular total ventas
datos2$Total <- datos2$Nacional + datos2$Internacional

datos2$Total

```

c) Calcular la media del valor de las ventas internacionales (media sobre todos los productos) y la media del valor de las ventas nacionales pero solo para los productos X, Y y R.

```{r ej2.c}
#| echo: false
###---------- Apartado 2.c) ----------------------------------------------------

# media del valor de las ventas internacionales
media_internac <- mean(datos2$Internacional)

media_internac

# media del valor de las ventas nacionales pero solo para los productos X, Y y R.
ventas_nacional_XYR <- datos2[c(1,2,4), 2]
(media_nacional_XYR <- mean(ventas_nacional_XYR))

media_nacional_XYR

# Otra forma de hacerlo
ventas_nacional_XYR <- datos2$Nacional[c(1,2,4)]
(media_nacional_XYR <- mean(ventas_nacional_XYR))

ventas_nacional_XYR <- datos2[c(1,2,4), "Nacional"]
(media_nacional_XYR <- mean(ventas_nacional_XYR))

seleccion <- datos2$Producto %in% c("X", "Y", "R")
(media_nacional_XYR <- mean(datos2$Nacional[seleccion]))


```

c) Se quiere conocer el número de compradores de los productos a partir del valor de las ventas y la información de los precios de los productos disponible en la siguiente tabla:

```{r ej2.d}
#| echo: false
#| results: 'asis'
###---------- Apartado 2.c) ----------------------------------------------------

# Estimar número de compradores

# Data Frame de precios
precios <- data.frame("PrecioNac" = c(5.2, 4.7, 5.7, 6.1, 7, 6.7),
                      "PrecioInt" = c(4.2, 4.3, 4.2, 4.5, 4.9, 4.8),
                      row.names = c("X", "Y", "Z", "R", "S", "T"))
  
########################################################################
precios |> kbl(format = "html")|> kable_paper("hover")

```

```{r ej2.d2}
#| echo: false

# Añadir precios a datos2
datos2 <- cbind(datos2, precios)

# Calcular número de compradores
datos2$compradoresN <- datos2$Nacional / datos2[[5]]
datos2$compradoresI <- datos2$Internacional / datos2[[6]]
```


<!--
# Apartado 3

a) Se ha preguntado a cinco clientes sobre su satisfacción con los servicios de una empresa. Su contestación ha sido: "poco", "nada", "nada", "poco", "mucho". Generar un vector, `factor_satisf_vector`, adecuado para esta información.

```{r ej.3a}
#| echo: false
###---------- Apartado 3.a) ----------------------------------------------------

# Vector de satisfacción
satisf_vector <- c("poco", "nada", "nada", "poco", "mucho")

#factor_satisf_vector0 <- factor(satisf_vector, ordered = TRUE)
#levels(factor_satisf_vector0)
#summary(factor_satisf_vector0)

factor_satisf_vector <- factor(satisf_vector, ordered = TRUE, 
                               levels = c("nada", "poco", "mucho"))
#levels(factor_satisf_vector)
#summary(factor_satisf_vector)

factor_satisf_vector
```

b) Generar un vector, `sum_factor`, con las estadísticas descriptivas de la información del apartado anterior y muestra el resultado ("imprime" ese vector). 

```{r ej.3b}
#| echo: false
###---------- Apartado 3.b) ----------------------------------------------------

# Resumen del vector
sum_vector <- summary(satisf_vector)
print(sum_vector)

# Resumen del factor
sum_factor <- summary(factor_satisf_vector)
print(sum_factor)
```

c) Crear el vector `comparar_clientes` que informe sobre si el cliente 2 está más satisfecho que el cliente 5.

```{r ej.3c}
#| echo: false
###---------- Apartado 3.c) ----------------------------------------------------

# Valor del factor para el segundo cliente
cliente2 <- factor_satisf_vector[2]
# Valor del factor para el quinto cliente
cliente5 <- factor_satisf_vector[5]

# Está el segundo cliente más safisfecho
comparar_clientes <- cliente2 > cliente5

comparar_clientes
class(comparar_clientes)

# satisf_vector[2] > satisf_vector[5]
```
-->

# Apartado 3

a) El conjunto de datos `mtcars` está incluido en R por defecto; buscar en la ayuda de RStudio `mtcars` para conocer las variables que incluye. Comprobar la estructura con `str()` y visualizar las primeras observaciones con `head()`. 

    * Generar la variable (escalar) `Datsun710_CV` con los caballos de potencia del coche modelo Datsun 710.
    
    * Generar el vector `Valiant_vector` con toda la información (esto es, variables) disponibles sobre el coche modelo `Valiant`.

```{r ej.4a}
#| echo: false
###---------- Apartado 4.a) ----------------------------------------------------

# Mostrar la estructura del conjunto de datos
str(mtcars)

# Mostrar las primeras filas (observaciones)
head(mtcars)

# Caballos del Datsun 710
Datsun710_CV <- mtcars[3, "hp"]
Datsun710_CV <- mtcars[3, 4]
Datsun710_CV <- mtcars["Datsun 710", 4]
Datsun710_CV <- mtcars["Datsun 710", "hp"]

Datsun710_CV

# Características del Valiant
Valiant_vector <- mtcars[6,]
Valiant_vector <- mtcars["Valiant",]

Valiant_vector
```

b) Generar el vector `cilindros` con la información para todos los modelos de coche de la variable sobre el número de cilindros. Generar el vector `cambio_vector` con la información de la variable de tipo de cambio (manual o automático) de todos los modelos de coche Mazda y Hornet.

```{r ej.4b}
#| echo: false
###---------- Apartado 4.b) ----------------------------------------------------

# Variable cilindros como vector usando $
cilindros <- mtcars$cyl
cilindros <- mtcars[,4]
cilindros <- mtcars[,"cyl"]

cilindros

# Tipo de cambio de los Mazda y Hornet
cambio_vector <- mtcars[c(1:2,4:5),"am"]

cambio_vector <- mtcars[rownames(mtcars) %in%  c("Mazda RX4", "Mazda RX4 Wag", "Hornet 4 Drive", "Hornet Sportabout"),"am"]

cambio_vector <- mtcars$am[rownames(mtcars) %in%  c("Mazda RX4", "Mazda RX4 Wag", "Hornet 4 Drive", "Hornet Sportabout")]


cambio_vector
```

c) Generar `media_consumo_autom` con el consumo medio de los coches con cambio automático. Generar `media_consumo_autom_cyl4` con el consumo medio de los coches con cambio automático y cuatro cilindros.

```{r ej.4c}
#| echo: false
###---------- Apartado 4.c) ----------------------------------------------------

# Seleccionar cambio automático 
sel_cambio <- mtcars$am == 0
  
# Media de consumo para coches de cambio automático
consumo_cambio_vector <- mtcars[sel_cambio, "mpg"]
media_consumo_autom  <- mean(consumo_cambio_vector)

media_consumo_autom <- mean(subset(mtcars, am == 0,"mpg"))
media_consumo_autom <- mean(subset(mtcars, am == 0)$mpg)

datos <-subset(mtcars, am == 0)
media_consumo_autom <- mean(datos$mpg)

media_consumo_autom 

# Seleccionar cambio automático y cuatro cilindros 
sel_cambio2 <- mtcars$am == 0 & mtcars$cyl == 4

# Media de consumo para coches de cambio automático y cuatro cilindros
media_consumo_autom_cyl4 <- mean(mtcars[sel_cambio2, "mpg"])

media_consumo_autom_cyl4


# # Select planets with diameter < 1
# #subset(planets_df, subset = diameter < 1)

#
## Use order() to create positions
#positions <- order(planets_df$diameter)
#
## Use positions to sort planets_df
#planets_df[positions, ]
```

<!--
# Apartado 5

```{r ej.5a}
#| echo: false
###---------- Apartado 5.a) ----------------------------------------------------

# Vector numérico de 1 a 10
mi_vector <- 1:10 

# Matrix con númemros de 1 a 4
mi_matriz <- matrix(1:4, ncol = 4)

# Data Frame con 10 primeros elementos de mtcars
mis_datos <- mtcars[1:10,]

# Construir lista:
mi_lista <- list(vector = mi_vector, matriz = mi_matriz, datos = mis_datos)

# Estructura de la lista
str(mi_lista)

mi_lista
```

```{r ej.5b}
#| echo: false
#| results: 'asis'
###---------- Apartado 5.b) ----------------------------------------------------

# media del vector de la lista
media_vector <- mean(mi_lista$vector)
media_vector <- mean(mi_lista[[1]])
media_vector <- mean(mi_lista[["vector"]])

media_vector

# media de la 5 primeras observaciones de consumo de los datos de la lista
media_datos_5 <- mean(mi_lista[[3]][1:5,1])

media_datos_5
```
-->

# Entrega del ejercicio

Rellenad este [FORMULARIO](https://docs.google.com/forms/d/e/1FAIpQLSfNcz7-CZ4fZOFL4KJzgVNGpcrVMSTjzqsRX8e5HW08hb3B1g/viewform) con vuestros datos y subid 

  * vuestro archivo de R 
    
<!--  * el fichero .csv que utilizáis.. -->
    
IMPORTANTE: el nombre de los ficheros que subáis DEBE  seguir el  siguiente formato que incluye vuestro número de DNI: ej., 

  * Tema00ej1_123456789.R
    
<!--  * 12345678_ET05_datos.csv -->



